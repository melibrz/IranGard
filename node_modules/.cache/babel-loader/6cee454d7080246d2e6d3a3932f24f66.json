{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\project\\\\IranGard\\\\src\\\\Components\\\\textContainder.js\";\nimport React from 'react';\n\nvar TextExpand =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextExpand, _React$Component);\n\n  function TextExpand(props) {\n    var _this;\n\n    _classCallCheck(this, TextExpand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextExpand).call(this, props));\n    _this.state = {\n      expanded: false\n    };\n    _this.handleExpandClick = _this.handleExpandClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TextExpand, [{\n    key: \"handleExpandClick\",\n    value: function handleExpandClick() {\n      this.setState({\n        expanded: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = this.props.text;\n      var expanded = this.state.expanded;\n      var shortText = text.substring(0, 283); // Change 100 to however many characters you want to display initially\n\n      return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, expanded ? text : shortText), !expanded && React.createElement(\"span\", {\n        onClick: this.handleExpandClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\u0628\\u06CC\\u0634\\u062A\\u0631 \\u0628\\u062E\\u0648\\u0627\\u0646\\u06CC\\u062F...\"));\n    }\n  }]);\n\n  return TextExpand;\n}(React.Component);\n\nexport default TextExpand;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\project\\IranGard\\src\\Components\\textContainder.js"],"names":["React","TextExpand","props","state","expanded","handleExpandClick","bind","setState","text","shortText","substring","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AALiB;AAMlB;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;;;6BAEQ;AAAA,UACCI,IADD,GACU,KAAKN,KADf,CACCM,IADD;AAAA,UAECJ,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAGP,UAAMK,SAAS,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAlB,CAHO,CAGmC;;AAC1C,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAON,QAAQ,GAAGI,IAAH,GAAUC,SAAzB,CADF,EAEG,CAACL,QAAD,IACC;AAAM,QAAA,OAAO,EAAE,KAAKC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAHJ,CADF;AAQD;;;;EAzBsBL,KAAK,CAACW,S;;AA4B/B,eAAeV,UAAf","sourcesContent":["import React from 'react';\r\n\r\nclass TextExpand extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false\r\n    };\r\n    this.handleExpandClick = this.handleExpandClick.bind(this);\r\n  }\r\n\r\n  handleExpandClick() {\r\n    this.setState({ expanded: true });\r\n  }\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n    const { expanded } = this.state;\r\n    const shortText = text.substring(0, 283); // Change 100 to however many characters you want to display initially\r\n    return (\r\n      <>\r\n        <span>{expanded ? text : shortText}</span>\r\n        {!expanded && (\r\n          <span onClick={this.handleExpandClick}>بیشتر بخوانید...</span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextExpand;\r\n"]},"metadata":{},"sourceType":"module"}